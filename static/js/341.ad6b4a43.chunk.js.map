{"version":3,"file":"static/js/341.ad6b4a43.chunk.js","mappings":"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","sources":["components/doctor/appointments/patient.js","components/doctor/appointments/index.js","pages/doctor-nurse/dashboard.js","../node_modules/react-bootstrap/esm/AlertHeading.js","../node_modules/react-bootstrap/esm/AlertLink.js","../node_modules/react-bootstrap/esm/Alert.js","../node_modules/react-bootstrap/esm/Spinner.js"],"sourcesContent":["import { IoChatbubbleEllipses } from \"react-icons/io5\";\r\nimport { dateFormatter } from \"../../../api/helper\";\r\nimport { DEFAULT_IMG_URL } from \"../../../constants/default\";\r\nimport { MEDICAL_HISTORY } from \"../../../constants/routes\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Patient({ patientImg, patientName, date, patientId }) {\r\n    const navigate = useNavigate();\r\n    const patientClickHandler = () => {\r\n        navigate(`/${MEDICAL_HISTORY}/${patientId}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex align-items-center gap-3 p-3 border rounded bg-white\" > \r\n            <div className=\"\">\r\n                <img\r\n                    src={patientImg || DEFAULT_IMG_URL}\r\n                    alt={patientName}\r\n                    className=\"rounded-circle\"\r\n                    style={{ width: \"5rem\", height: \"5rem\" }}\r\n                />\r\n            </div>\r\n            <div \r\n                className=\"flex-grow-1\"\r\n                style={{ \r\n                    cursor: \"pointer\",\r\n                    minWidth: 0 // Allows the flex item to shrink below content width\r\n                }} \r\n                onClick={patientClickHandler}\r\n            >\r\n                {/* Added text-truncate to both elements and their container */}\r\n                <h5 className=\"mb-0 text-truncate\">{patientName}</h5>\r\n                {date && (\r\n                    <small className=\"text-muted text-truncate d-block\">\r\n                        {dateFormatter(new Date(date))}\r\n                    </small>\r\n                )}\r\n            </div>\r\n            <div className=\"flex-shrink-0 text-primary\" style={{ fontSize: \"2rem\", cursor: \"pointer\" }}>\r\n                <IoChatbubbleEllipses />\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { useSelector } from \"react-redux\";\r\nimport Patient from \"./patient\";\r\nimport { Alert, Card, Spinner } from \"react-bootstrap\";\r\nfunction DoctorAppointments({appointments}) {\r\n    const {  isLoading, error } = useSelector(state => state.appointments);\r\n    const Appointments = appointments?.map(app => (\r\n        <div key={app.id} className=\"col-12\">\r\n            <Patient {...app} />\r\n        </div>\r\n    ));\r\n\r\n    return (\r\n        <Card.Body>\r\n                {error && (\r\n                    <Alert variant=\"danger\" className=\"text-center\">\r\n                        {error}\r\n                    </Alert>\r\n                )}\r\n                {isLoading ? (\r\n                    <div className=\"text-center py-4\">\r\n                        <Spinner animation=\"border\" variant=\"primary\" />\r\n                    </div>\r\n                ) : (\r\n                    Appointments.length ===0 && !error? \r\n                        <div className=\"text-center\">NO Appointmets Found</div>\r\n                        : \r\n                        <div style={{ \r\n                            display: 'grid',\r\n                            gridTemplateColumns: 'repeat(auto-fill, minmax(270px, 1fr))',\r\n                            gap: '1rem',\r\n                            width: '100%',\r\n                        }}>\r\n                            {Appointments}\r\n                        </div>\r\n                )}\r\n            </Card.Body>\r\n\r\n    );\r\n}\r\n\r\nexport default DoctorAppointments;\r\n      ","import {  useEffect } from 'react';\nimport DoctorAppointments from '../../components/doctor/appointments';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Card, Container } from 'react-bootstrap';\nimport { getTodayAppointments } from '../../features/appointments';\n\nfunction Dashboadrd() {\n    const { todayApps } = useSelector((store) => store.appointments)\n    const  dispatch = useDispatch();\n    useEffect(()=>{\n        if(todayApps.length ===0)dispatch(getTodayAppointments());\n        document.title = 'Dashboard';\n    },[dispatch, todayApps.length])\n    return (\n        <Container className=\"py-4\">\n        <Card className=\"mb-4 shadow-sm\">\n            <Card.Header className=\"bg-primary text-white\">\n                <h3 className=\"mb-0\">Today Appointments</h3>\n            </Card.Header>\n            <Card.Body>\n                <DoctorAppointments appointments={todayApps}  />\n            </Card.Body>\n        </Card>\n    </Container>);\n}\n\nexport default Dashboadrd;\n","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'alert-heading');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nAlertHeading.displayName = 'AlertHeading';\nexport default AlertHeading;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AlertLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = Anchor,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'alert-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nAlertLink.displayName = 'AlertLink';\nexport default AlertLink;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AlertHeading from './AlertHeading';\nimport AlertLink from './AlertLink';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show = true,\n    closeLabel = 'Close alert',\n    closeVariant,\n    className,\n    children,\n    variant = 'primary',\n    onClose,\n    dismissible,\n    transition = Fade,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Spinner = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  variant,\n  animation = 'border',\n  size,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  const bsSpinnerPrefix = `${bsPrefix}-${animation}`;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsSpinnerPrefix, size && `${bsSpinnerPrefix}-${size}`, variant && `text-${variant}`)\n  });\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;"],"names":["Patient","_ref","patientImg","patientName","date","patientId","navigate","useNavigate","_jsxs","className","children","_jsx","src","DEFAULT_IMG_URL","alt","style","width","height","cursor","minWidth","onClick","patientClickHandler","MEDICAL_HISTORY","dateFormatter","Date","fontSize","IoChatbubbleEllipses","appointments","isLoading","error","useSelector","state","Appointments","map","app","id","Card","Body","Alert","variant","Spinner","animation","length","display","gridTemplateColumns","gap","todayApps","store","dispatch","useDispatch","useEffect","getTodayAppointments","document","title","Container","Header","DoctorAppointments","DivStyledAsH4","divWithClassName","displayName","AlertHeading","React","ref","bsPrefix","as","Component","props","useBootstrapPrefix","classNames","AlertLink","Anchor","uncontrolledProps","show","closeLabel","closeVariant","onClose","dismissible","transition","Fade","useUncontrolled","prefix","handleClose","useEventCallback","e","Transition","alert","role","undefined","CloseButton","unmountOnExit","in","Object","assign","Link","Heading","size","bsSpinnerPrefix"],"sourceRoot":""}