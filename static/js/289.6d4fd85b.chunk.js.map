{"version":3,"file":"static/js/289.6d4fd85b.chunk.js","mappings":"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","sources":["api/api.js","components/blood-bank/form.js","pages/blood-bank/blood-request.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js"],"sourcesContent":["\n\nconst specializations = [\n    { \"id\": 1, \"label\": \"Cardiology\", \"value\": \"Cardiology\" },\n    { \"id\": 2, \"label\": \"Dermatology\", \"value\": \"Dermatology\" },\n    { \"id\": 3, \"label\": \"Pediatrics\", \"value\": \"Pediatrics\" },\n    { \"id\": 4, \"label\": \"Orthopedics\", \"value\": \"Orthopedics\" },\n    { \"id\": 5, \"label\": \"Neurology\", \"value\": \"Neurology\" },\n    { \"id\": 6, \"label\": \"Ophthalmology\", \"value\": \"Ophthalmology\" },\n    { \"id\": 7, \"label\": \"Obstetrics and Gynecology\", \"value\": \"Obstetrics and Gynecology\" },\n    { \"id\": 8, \"label\": \"Psychiatry\", \"value\": \"Psychiatry\" },\n    { \"id\": 9, \"label\": \"General Surgery\", \"value\": \"General Surgery\" },\n    { \"id\": 10, \"label\": \"Internal Medicine\", \"value\": \"Internal Medicine\" },\n    { \"id\": 11, \"label\": \"Anesthesiology\", \"value\": \"Anesthesiology\" },\n    { \"id\": 12, \"label\": \"Radiology\", \"value\": \"Radiology\" },\n    { \"id\": 13, \"label\": \"Urology\", \"value\": \"Urology\" },\n    { \"id\": 14, \"label\": \"Oncology\", \"value\": \"Oncology\" },\n    { \"id\": 15, \"label\": \"Pulmonology\", \"value\": \"Pulmonology\" },\n    { \"id\": 16, \"label\": \"Gastroenterology\", \"value\": \"Gastroenterology\" },\n    { \"id\": 17, \"label\": \"Endocrinology\", \"value\": \"Endocrinology\" },\n    { \"id\": 18, \"label\": \"Nephrology\", \"value\": \"Nephrology\" },\n    { \"id\": 19, \"label\": \"Otolaryngology (ENT)\", \"value\": \"Otolaryngology (ENT)\" },\n    { \"id\": 20, \"label\": \"Rheumatology\", \"value\": \"Rheumatology\" },\n    { \"id\": 21, \"label\": \"Hematology\", \"value\": \"Hematology\" },\n    { \"id\": 22, \"label\": \"Allergy and Immunology\", \"value\": \"Allergy and Immunology\" },\n    { \"id\": 23, \"label\": \"Infectious Disease\", \"value\": \"Infectious Disease\" },\n    { \"id\": 24, \"label\": \"Physical Medicine and Rehabilitation\", \"value\": \"Physical Medicine and Rehabilitation\" },\n    { \"id\": 25, \"label\": \"Emergency Medicine\", \"value\": \"Emergency Medicine\" },\n    { \"id\": 26, \"label\": \"Pathology\", \"value\": \"Pathology\" },\n    { \"id\": 27, \"label\": \"Plastic Surgery\", \"value\": \"Plastic Surgery\" },\n    { \"id\": 28, \"label\": \"Thoracic Surgery\", \"value\": \"Thoracic Surgery\" },\n    { \"id\": 29, \"label\": \"Vascular Surgery\", \"value\": \"Vascular Surgery\" },\n    { \"id\": 30, \"label\": \"Dentistry\", \"value\": \"Dentistry\" }\n  ]\nconst userTypeOptions = [\n    { label: 'Patient', value: 'patient' },\n    { label: 'Doctor', value: 'doctor' },\n    { label: 'Nurse', value: 'nurse' },\n];\nconst bloodTypes = [\n    {id:1,value:'A+',label:'A+'},\n    {id:2,value:'A-',label:'A-'},\n    {id:3,value:'B+',label:'B+'},\n    {id:4,value:'B-',label:'B-'},\n    {id:5,value:'O+',label:'O+'},\n    {id:6,value:'O-',label:'O-'},\n    {id:7,value:'AB+',label:'AB+'},\n    {id:8,value:'AB-',label:'AB-'},\n    \n]\nconst searchTypes = [\n    {id:1,value:'doctor',label:'Doctor'},\n    {id:2,value:'nurse',label:'Nurse'},\n    {id:3,value:'donator',label:'Blood Donator'},\n    {id:4,value:'donation_request',label:'Blood Request'},\n]\n\n\nconst cities = [\n    { \"id\": 0, \"label\": \"All\", \"value\": \"All\" },\n    { \"id\": 1, \"label\": \"Cairo\", \"value\": \"Cairo\" },\n    { \"id\": 2, \"label\": \"Alexandria\", \"value\": \"Alexandria\" },\n    { \"id\": 3, \"label\": \"Giza\", \"value\": \"Giza\" },\n    { \"id\": 4, \"label\": \"6th of October City\", \"value\": \"6th of October City\" },\n    { \"id\": 5, \"label\": \"Port Said\", \"value\": \"Port Said\" },\n    { \"id\": 6, \"label\": \"Suez\", \"value\": \"Suez\" },\n    { \"id\": 7, \"label\": \"Luxor\", \"value\": \"Luxor\" },\n    { \"id\": 8, \"label\": \"Asyut\", \"value\": \"Asyut\" },\n    { \"id\": 9, \"label\": \"Mansoura\", \"value\": \"Mansoura\" },\n    { \"id\": 10, \"label\": \"Tanta\", \"value\": \"Tanta\" },\n    { \"id\": 11, \"label\": \"Zagazig\", \"value\": \"Zagazig\" },\n    { \"id\": 12, \"label\": \"Faiyum\", \"value\": \"Faiyum\" },\n    { \"id\": 13, \"label\": \"Ismailia\", \"value\": \"Ismailia\" },\n    { \"id\": 14, \"label\": \"Aswan\", \"value\": \"Aswan\" },\n    { \"id\": 15, \"label\": \"Minya\", \"value\": \"Minya\" },\n    { \"id\": 16, \"label\": \"Hurghada\", \"value\": \"Hurghada\" },\n    { \"id\": 17, \"label\": \"Shubra El-Kheima\", \"value\": \"Shubra El-Kheima\" },\n    { \"id\": 18, \"label\": \"Qena\", \"value\": \"Qena\" },\n    { \"id\": 19, \"label\": \"Sohag\", \"value\": \"Sohag\" },\n    { \"id\": 20, \"label\": \"Banha\", \"value\": \"Banha\" }\n  ]\n\nconst days = [\n    { label: \"Sunday\", value: 0 },\n    { label: \"Monday\", value: 1 },\n    { label: \"Tuesday\", value: 2 },\n    { label: \"Wednesday\", value: 3 },\n    { label: \"Thursday\", value: 4 },\n    { label: \"Friday\", value: 5 },\n    { label: \"Saturday\", value: 6 }\n];\n\n\n\nexport { specializations, bloodTypes, cities, searchTypes, userTypeOptions,days }","import {  useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Select from 'react-select';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { cities, bloodTypes } from '../../api/api'\r\nimport { PostDonation } from \"../../api/data\";\r\nimport { Button, Spinner,Form } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction BloodBankForm({ isRequest }) {\r\n    const { city } = useSelector(store => store.authedUser.user);\r\n    const [formState, setFormState] = useState({ \r\n        bloodType: null, \r\n        city: null, \r\n        date: null \r\n    });\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const validateForm = () => {\r\n        if (!formState.bloodType || !formState.city || !formState.date) {\r\n            toast.error('Please fill all required fields');\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        if (!validateForm()) return;\r\n        setIsLoading(true);\r\n        try {\r\n            await toast.promise(\r\n                PostDonation({ \r\n                    isRequest,\r\n                    bloodType: formState.bloodType.value,\r\n                    city: formState.city.value,\r\n                    date: new Date(formState.date).getTime()\r\n                }),\r\n                {\r\n                    pending: isRequest?'Creating blood request...': 'Creating Blood Donation Request...',\r\n                    success: 'Blood request created successfully!',\r\n                    error: {\r\n                        render({ data }) {\r\n                            return data?.message || isRequest?'Failed to create blood request' :'Failed to create blood request';\r\n                        }\r\n                    }\r\n                });\r\n        } catch (error) {\r\n            console.error('Submission error:', error);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n    return (  <Form onSubmit={submit} className=\"border p-4 rounded-3 shadow-sm bg-white\">\r\n        <h2 className=\"mb-4 text-center\">{isRequest?'Donation Request':'Blood Donation'} </h2>\r\n\r\n        <Form.Group className=\"mb-4\">\r\n            <DatePicker\r\n                selected={formState.date}\r\n                onChange={(date) => setFormState(prev => ({ ...prev, date }))}\r\n                minDate={new Date()}\r\n                className=\"form-control\"\r\n                placeholderText=\"Select Date\"\r\n                showIcon\r\n                required\r\n            />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-4\">\r\n            <Select\r\n                options={bloodTypes}\r\n                placeholder=\"Select Blood Type\"\r\n                onChange={(item) => setFormState(prev => ({ ...prev, bloodType: item }))}\r\n                classNamePrefix=\"react-select\"\r\n                value={formState.bloodType}\r\n                required\r\n            />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-4\">\r\n            <Select\r\n                options={cities}\r\n                placeholder=\"Select City\"\r\n                onChange={(item) => setFormState(prev => ({ ...prev, city: item }))}\r\n                defaultValue={city}\r\n                classNamePrefix=\"react-select\"\r\n                value={formState.city}\r\n                required\r\n            />\r\n        </Form.Group>\r\n\r\n        <div className=\"d-grid\">\r\n            <Button \r\n                variant=\"primary\" \r\n                type=\"submit\" \r\n                disabled={isLoading}\r\n                size=\"lg\"\r\n            >\r\n                {isLoading ? (\r\n                    <>\r\n                        <Spinner\r\n                            as=\"span\"\r\n                            animation=\"border\"\r\n                            size=\"sm\"\r\n                            role=\"status\"\r\n                            aria-hidden=\"true\"\r\n                        />\r\n                        <span className=\"ms-2\">Submitting...</span>\r\n                    </>\r\n                ) : (\r\n                    'Submit Request'\r\n                )}\r\n            </Button>\r\n        </div>\r\n    </Form> );\r\n}\r\n\r\nexport default BloodBankForm;","import { useEffect } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\nimport BloodBankForm from \"../../components/blood-bank/form\";\n\nfunction BloodDonation() {\n   \n\n    useEffect(() => {\n        document.title = 'Blood Request';\n    }, []);\n    return (\n            <Row className=\"py-5 justify-content-center\" >\n                <Col xs={12} md={8} lg={6}>\n                    <BloodBankForm isRequest />\n                </Col>\n            </Row>\n    );\n}\n\nexport default BloodDonation;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, plaintext ? `${bsPrefix}-plaintext` : bsPrefix, size && `${bsPrefix}-${size}`, type === 'color' && `${bsPrefix}-color`, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormFloating = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nFormFloating.displayName = 'FormFloating';\nexport default FormFloating;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});"],"names":["specializations","userTypeOptions","label","value","bloodTypes","id","searchTypes","cities","days","_ref","isRequest","city","useSelector","store","authedUser","user","formState","setFormState","useState","bloodType","date","isLoading","setIsLoading","_jsxs","Form","onSubmit","async","e","preventDefault","toast","error","promise","PostDonation","Date","getTime","pending","success","render","_ref2","data","message","console","className","children","_jsx","Group","DatePicker","selected","onChange","prev","minDate","placeholderText","showIcon","required","Select","options","placeholder","item","classNamePrefix","defaultValue","Button","variant","type","disabled","size","_Fragment","Spinner","as","animation","role","useEffect","document","title","Row","Col","xs","md","lg","BloodBankForm","FormControl","React","ref","bsPrefix","htmlSize","isValid","isInvalid","plaintext","readOnly","Component","props","controlId","useContext","FormContext","useBootstrapPrefix","classNames","displayName","Object","assign","Feedback","FormFloating","FormRange","FormSelect","FormText","muted","Switch","FormCheck","Input","Label","FloatingLabel","FormGroup","htmlFor","propTypes","PropTypes","validated","Control","Floating","Check","FormLabel","Text","Range"],"sourceRoot":""}