{"version":3,"file":"static/js/615.94b9fd2b.chunk.js","mappings":"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","sources":["components/medical-history/diagnosis.js","../node_modules/react-bootstrap/esm/Table.js","components/medical-history/medicines.js","pages/patient/detailed-diagnosis.js","../node_modules/react-bootstrap/esm/AlertHeading.js","../node_modules/react-bootstrap/esm/AlertLink.js","../node_modules/react-bootstrap/esm/Alert.js","../node_modules/react-bootstrap/esm/Spinner.js"],"sourcesContent":["import { Link, useNavigate } from \"react-router-dom\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { \n    DOCTOR, \n    MEDICAL_HISTORY, \n    PATIENT, \n    PROFILE, \n    DETAILED_DIAGNOSIS \n} from \"../../constants/routes\";\nimport { useSelector } from \"react-redux\";\nimport { DEFAULT_IMG_URL } from \"../../constants/default\";\nimport '../../style/medical-history.css';\n\nexport default function Diagnosis({\n    children,\n    id,\n    doctorId,\n    doctorImage,\n    patientId,\n    doctorName,\n    specialization,\n    date,\n    description,\n    isPage\n}) {\n    const { userType } = useSelector(state => state.authedUser.user);\n    const navigate = useNavigate();\n\n    const handleDiagnosisClick = (e) => {\n        if (!isPage && userType === PATIENT) {\n            navigate(`/care-track/${PATIENT}/${MEDICAL_HISTORY}/${DETAILED_DIAGNOSIS}/${id}`);\n            return;\n        }\n        if (!isPage) navigate(`/care-track/${MEDICAL_HISTORY}/${patientId}/${DETAILED_DIAGNOSIS}/${id}`);\n    };\n\n    return (\n        <Card \n            className={`mb-1 shadow-sm card-hover-effect bg-white ${isPage ? 'mt-5' : ''}`} \n            onClick={handleDiagnosisClick} \n            style={{ cursor: 'pointer' }}\n        >\n            <Card.Body>\n                <Row className=\"g-3 align-items-center\">\n                    <Col xs=\"auto\">\n                        <Link \n                            to={`/care-track/${PROFILE}/${DOCTOR}/${doctorId}`} \n                            onClick={(e) => e.stopPropagation()}\n                            aria-label={`View Dr. ${doctorName}'s profile`}\n                        >\n                            <Card.Img \n                                src={doctorImage || DEFAULT_IMG_URL} \n                                alt={`Dr. ${doctorName}`} \n                                className=\"rounded-circle\"\n                                style={{ \n                                    width: '80px', \n                                    height: '80px', \n                                    objectFit: 'cover' \n                                }}\n                            />\n                        </Link>\n                    </Col>\n                    \n                    <Col className=\"position-relative\" style={{ minWidth: 0 }}>\n                        <div className=\"d-flex flex-column\">\n                            <Link \n                                to={`/care-track/${PROFILE}/${DOCTOR}/${doctorId}`} \n                                className=\"text-decoration-none h5 mb-1 fs-4 text-truncate\"\n                                onClick={(e) => e.stopPropagation()}\n                            >\n                                Dr. {doctorName}\n                            </Link>\n                            <small className=\"text-muted text-truncate\">\n                                {specialization}\n                            </small>\n                        </div>\n                    </Col>\n                </Row>\n\n                <div className=\"mt-3\" style={{ minWidth: 0 }}>\n                    <Card.Text className=\"mb-2 text-truncate\">\n                        <strong>Description:</strong> {description}\n                    </Card.Text>\n                    {children}\n                    <small className=\"text-muted d-block mt-2\">\n                        {new Date(date).toDateString()}\n                    </small>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n}","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Table, Spinner, Alert } from \"react-bootstrap\";\nimport { getDiagnosisMedicines, getMedicines } from '../../features/medicalHistory';\n\n\n\nconst MedicineMap = (medicines) => {\n  return medicines.map(med => (\n    <tr key={med.id} className=\"medicine\">\n      <td className=\"medicine-name medicine-mobile-sm\">{med.name}</td>\n      <td className=\"dose medicine-mobile-sm\">{med.dosage} {+med.dosage ===1?'Time':'Times'} , duration:{med.duration} days</td> \n      <td className=\"date medicine-mobile-sm\">\n        {new Date(med.date).toLocaleString('en-GB', {\n          day: '2-digit',\n          month: '2-digit',\n          year: 'numeric'\n        }).replace(/\\//g, '-')}\n      </td> \n    </tr>\n  ));\n};\n\nexport default function Medicines({ patientId, diagnosisId, medicines: DiagnosisMedicines }) {\n    const dispatch = useDispatch();\n    const { data: medicines, isLoading, error } = useSelector(store => store.medicalHistory.medicines);\n    console.log(DiagnosisMedicines)\n    const medicinesList = !!diagnosisId && DiagnosisMedicines \n        ? MedicineMap(DiagnosisMedicines)\n        : MedicineMap(medicines);\n\n    useEffect(() => {\n        if (!DiagnosisMedicines && !diagnosisId && medicines.length === 0) {\n            dispatch(getMedicines({ patientId }));\n        }else if(!DiagnosisMedicines && !!diagnosisId){\n            dispatch(getDiagnosisMedicines({ patientId, diagnosisId}))\n        }\n\n    }, [patientId, diagnosisId, dispatch, DiagnosisMedicines, medicines.length]);\n\n    if (isLoading) {\n        return (\n            <div className=\"text-center my-4 text-primary\">\n                <Spinner animation=\"border\" role=\"status\" size=\"sm\">\n                    <span className=\"visually-hidden\">Loading medicines...</span>\n                </Spinner>\n            </div>\n        );\n    }\n\n    if (error) {\n        return (\n            <Alert variant=\"danger\" className=\"my-4 fs-6 fs-sm-7\">\n                Error loading medicines: {error}\n            </Alert>\n        );\n    }\n\n    return (\n        <>\n            <div className=\"table-responsive\">\n                <Table striped bordered hover className=\"medicines-table shadow-sm border rounded\">\n                    <thead className=\"\" >\n                        <tr>\n                            <th className=\"medicine-mobile-sm\" >Medicine </th>\n                            <th className=\"medicine-mobile-sm\">Dose</th>\n                            <th className=\"medicine-mobile-sm\">Prescribed</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {medicinesList.length > 0 ? (\n                            medicinesList\n                        ) : (\n                            <tr>\n                                <td colSpan=\"4\" className=\"text-muted text-center py-4 fs-6 fs-sm-7\">\n                                    No medicines found\n                                </td>\n                            </tr>\n                        )}\n                    </tbody>\n                </Table>\n            </div>\n        </>\n    );\n}","import { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {  Alert, Spinner, Row, Col, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Diagnosis from \"../../components/medical-history/diagnosis\";\nimport Medicines from \"../../components/medical-history/medicines\";\nimport { getDiagnosis, selectDiagnosisById } from \"../../features/medicalHistory\";\nimport { PATIENT } from \"../../constants/routes\";\n\nfunction DetailedDiagnosis() {\n    const { diagnosisId, patientId } = useParams();\n    const { userType,id:userId } = useSelector(state=>state.authedUser.user)\n    const diagnosis = useSelector(selectDiagnosisById(diagnosisId));\n    const { isLoading, error } = useSelector(state => state.medicalHistory.diagnosis);\n    const dispatch = useDispatch();\n    const id = userType ===PATIENT ? userId: patientId;\n    useEffect(() => {\n        document.title = 'Diagnosis Details';\n        if(!diagnosis) dispatch(getDiagnosis({ type: 'diagnosis', diagnosisId, patientId:id }));\n    }, [diagnosisId, patientId, dispatch, diagnosis, id]);\n\n    if (isLoading) {\n        return (\n            <Card className=\"shadow-sm my-5\">\n                <Card.Body className=\"text-center\">\n                <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n                <p className=\"mt-2\">Loading diagnosis details...</p>\n                </Card.Body>\n            </Card>\n\n        );\n    }\n\n    if (error) {\n        return (\n                <Alert variant=\"danger\" className=\"text-center  my-5 p-5\">\n                    Error: {error}\n                </Alert>\n        );\n    }\n\n    if (!diagnosis) {\n        return (\n                <Alert variant=\"info\" className=\"text-center my-5 p-5\">\n                    Diagnosis Not Found\n                </Alert>\n        );\n    }\n\n    return (\n            <Row className=\"justify-content-center\">\n                <Col lg={10} xl={8}>\n                    <Diagnosis {...diagnosis} isPage>\n                        {diagnosis?.medicines?.length !== 0 ? (\n                            <Medicines medicines={diagnosis.medicines} diagnosisId={diagnosisId}  patientId={diagnosis.patientId} />\n                        ) : (\n                            <p className=\"text-muted text-center mb-0\">\n                                No prescribed medications found\n                            </p>\n                        )}\n                    </Diagnosis>\n                </Col>\n            </Row>\n    );\n}\n\nexport default DetailedDiagnosis;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'alert-heading');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nAlertHeading.displayName = 'AlertHeading';\nexport default AlertHeading;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AlertLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = Anchor,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'alert-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nAlertLink.displayName = 'AlertLink';\nexport default AlertLink;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AlertHeading from './AlertHeading';\nimport AlertLink from './AlertLink';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show = true,\n    closeLabel = 'Close alert',\n    closeVariant,\n    className,\n    children,\n    variant = 'primary',\n    onClose,\n    dismissible,\n    transition = Fade,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Spinner = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  variant,\n  animation = 'border',\n  size,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  const bsSpinnerPrefix = `${bsPrefix}-${animation}`;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsSpinnerPrefix, size && `${bsSpinnerPrefix}-${size}`, variant && `text-${variant}`)\n  });\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;"],"names":["Diagnosis","_ref","children","id","doctorId","doctorImage","patientId","doctorName","specialization","date","description","isPage","userType","useSelector","state","authedUser","user","navigate","useNavigate","_jsx","Card","className","onClick","e","PATIENT","MEDICAL_HISTORY","DETAILED_DIAGNOSIS","style","cursor","_jsxs","Body","Row","Col","xs","Link","to","PROFILE","DOCTOR","stopPropagation","Img","src","DEFAULT_IMG_URL","alt","width","height","objectFit","minWidth","Text","Date","toDateString","React","ref","bsPrefix","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","responsiveClass","MedicineMap","medicines","map","med","name","dosage","duration","toLocaleString","day","month","year","replace","Medicines","diagnosisId","DiagnosisMedicines","dispatch","useDispatch","data","isLoading","error","store","medicalHistory","console","log","medicinesList","useEffect","length","getDiagnosisMedicines","getMedicines","Spinner","animation","role","Alert","_Fragment","Table","colSpan","_diagnosis$medicines","useParams","userId","diagnosis","selectDiagnosisById","document","title","getDiagnosis","type","lg","xl","DivStyledAsH4","divWithClassName","displayName","AlertHeading","as","Component","AlertLink","Anchor","uncontrolledProps","show","closeLabel","closeVariant","onClose","dismissible","transition","Fade","useUncontrolled","prefix","handleClose","useEventCallback","Transition","alert","undefined","CloseButton","unmountOnExit","in","Object","assign","Heading","bsSpinnerPrefix"],"sourceRoot":""}