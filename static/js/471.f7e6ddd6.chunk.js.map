{"version":3,"file":"static/js/471.f7e6ddd6.chunk.js","mappings":"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","sources":["api/api.js","pages/signup.js","../node_modules/react-bootstrap/esm/Image.js"],"sourcesContent":["\n\nconst specializations = [\n    { \"id\": 1, \"label\": \"Cardiology\", \"value\": \"Cardiology\" },\n    { \"id\": 2, \"label\": \"Dermatology\", \"value\": \"Dermatology\" },\n    { \"id\": 3, \"label\": \"Pediatrics\", \"value\": \"Pediatrics\" },\n    { \"id\": 4, \"label\": \"Orthopedics\", \"value\": \"Orthopedics\" },\n    { \"id\": 5, \"label\": \"Neurology\", \"value\": \"Neurology\" },\n    { \"id\": 6, \"label\": \"Ophthalmology\", \"value\": \"Ophthalmology\" },\n    { \"id\": 7, \"label\": \"Obstetrics and Gynecology\", \"value\": \"Obstetrics and Gynecology\" },\n    { \"id\": 8, \"label\": \"Psychiatry\", \"value\": \"Psychiatry\" },\n    { \"id\": 9, \"label\": \"General Surgery\", \"value\": \"General Surgery\" },\n    { \"id\": 10, \"label\": \"Internal Medicine\", \"value\": \"Internal Medicine\" },\n    { \"id\": 11, \"label\": \"Anesthesiology\", \"value\": \"Anesthesiology\" },\n    { \"id\": 12, \"label\": \"Radiology\", \"value\": \"Radiology\" },\n    { \"id\": 13, \"label\": \"Urology\", \"value\": \"Urology\" },\n    { \"id\": 14, \"label\": \"Oncology\", \"value\": \"Oncology\" },\n    { \"id\": 15, \"label\": \"Pulmonology\", \"value\": \"Pulmonology\" },\n    { \"id\": 16, \"label\": \"Gastroenterology\", \"value\": \"Gastroenterology\" },\n    { \"id\": 17, \"label\": \"Endocrinology\", \"value\": \"Endocrinology\" },\n    { \"id\": 18, \"label\": \"Nephrology\", \"value\": \"Nephrology\" },\n    { \"id\": 19, \"label\": \"Otolaryngology (ENT)\", \"value\": \"Otolaryngology (ENT)\" },\n    { \"id\": 20, \"label\": \"Rheumatology\", \"value\": \"Rheumatology\" },\n    { \"id\": 21, \"label\": \"Hematology\", \"value\": \"Hematology\" },\n    { \"id\": 22, \"label\": \"Allergy and Immunology\", \"value\": \"Allergy and Immunology\" },\n    { \"id\": 23, \"label\": \"Infectious Disease\", \"value\": \"Infectious Disease\" },\n    { \"id\": 24, \"label\": \"Physical Medicine and Rehabilitation\", \"value\": \"Physical Medicine and Rehabilitation\" },\n    { \"id\": 25, \"label\": \"Emergency Medicine\", \"value\": \"Emergency Medicine\" },\n    { \"id\": 26, \"label\": \"Pathology\", \"value\": \"Pathology\" },\n    { \"id\": 27, \"label\": \"Plastic Surgery\", \"value\": \"Plastic Surgery\" },\n    { \"id\": 28, \"label\": \"Thoracic Surgery\", \"value\": \"Thoracic Surgery\" },\n    { \"id\": 29, \"label\": \"Vascular Surgery\", \"value\": \"Vascular Surgery\" },\n    { \"id\": 30, \"label\": \"Dentistry\", \"value\": \"Dentistry\" }\n  ]\nconst userTypeOptions = [\n    { label: 'Patient', value: 'patient' },\n    { label: 'Doctor', value: 'doctor' },\n    { label: 'Nurse', value: 'nurse' },\n];\nconst bloodTypes = [\n    {id:1,value:'A+',label:'A+'},\n    {id:2,value:'A-',label:'A-'},\n    {id:3,value:'B+',label:'B+'},\n    {id:4,value:'B-',label:'B-'},\n    {id:5,value:'O+',label:'O+'},\n    {id:6,value:'O-',label:'O-'},\n    {id:7,value:'AB+',label:'AB+'},\n    {id:8,value:'AB-',label:'AB-'},\n    \n]\nconst searchTypes = [\n    {id:1,value:'doctor',label:'Doctor'},\n    {id:2,value:'nurse',label:'Nurse'},\n    {id:3,value:'donator',label:'Blood Donator'},\n    {id:4,value:'donation_request',label:'Blood Request'},\n]\n\n\nconst cities = [\n    { \"id\": 0, \"label\": \"All\", \"value\": \"All\" },\n    { \"id\": 1, \"label\": \"Cairo\", \"value\": \"Cairo\" },\n    { \"id\": 2, \"label\": \"Alexandria\", \"value\": \"Alexandria\" },\n    { \"id\": 3, \"label\": \"Giza\", \"value\": \"Giza\" },\n    { \"id\": 4, \"label\": \"6th of October City\", \"value\": \"6th of October City\" },\n    { \"id\": 5, \"label\": \"Port Said\", \"value\": \"Port Said\" },\n    { \"id\": 6, \"label\": \"Suez\", \"value\": \"Suez\" },\n    { \"id\": 7, \"label\": \"Luxor\", \"value\": \"Luxor\" },\n    { \"id\": 8, \"label\": \"Asyut\", \"value\": \"Asyut\" },\n    { \"id\": 9, \"label\": \"Mansoura\", \"value\": \"Mansoura\" },\n    { \"id\": 10, \"label\": \"Tanta\", \"value\": \"Tanta\" },\n    { \"id\": 11, \"label\": \"Zagazig\", \"value\": \"Zagazig\" },\n    { \"id\": 12, \"label\": \"Faiyum\", \"value\": \"Faiyum\" },\n    { \"id\": 13, \"label\": \"Ismailia\", \"value\": \"Ismailia\" },\n    { \"id\": 14, \"label\": \"Aswan\", \"value\": \"Aswan\" },\n    { \"id\": 15, \"label\": \"Minya\", \"value\": \"Minya\" },\n    { \"id\": 16, \"label\": \"Hurghada\", \"value\": \"Hurghada\" },\n    { \"id\": 17, \"label\": \"Shubra El-Kheima\", \"value\": \"Shubra El-Kheima\" },\n    { \"id\": 18, \"label\": \"Qena\", \"value\": \"Qena\" },\n    { \"id\": 19, \"label\": \"Sohag\", \"value\": \"Sohag\" },\n    { \"id\": 20, \"label\": \"Banha\", \"value\": \"Banha\" }\n  ]\n\nconst days = [\n    { label: \"Sunday\", value: 0 },\n    { label: \"Monday\", value: 1 },\n    { label: \"Tuesday\", value: 2 },\n    { label: \"Wednesday\", value: 3 },\n    { label: \"Thursday\", value: 4 },\n    { label: \"Friday\", value: 5 },\n    { label: \"Saturday\", value: 6 }\n];\n\n\n\nexport { specializations, bloodTypes, cities, searchTypes, userTypeOptions,days }","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { Controller, useForm } from 'react-hook-form';\nimport { Container, Row, Col, Form, Button, Image, Alert } from 'react-bootstrap';\nimport Select from 'react-select';\nimport { setAuthedUserThunk } from '../features/authedUser';\nimport { LOGIN } from '../constants/routes';\nimport { calculateAge } from '../api/helper';\nimport { userTypeOptions, cities } from '../api/api';\n\nconst SignUp = () => {\n  const { \n    register, \n    control, \n    handleSubmit, \n    formState: { errors } \n  } = useForm({\n    defaultValues: {\n      userType: { label: 'Patient', value: 'patient',id:1 }\n    }\n  });\n  \n  const navigate = useNavigate();\n  const { error, isLoading, user } = useSelector((store) => store.authedUser);\n  const dispatch = useDispatch();\n\n  const onSubmit = async (data) => {\n    console.log(\"data\", data)\n\n    dispatch(setAuthedUserThunk({ \n      create: true, \n      user: data \n    }));\n  };\n  const validateBirthday = (birthdayString)=>{\n    const age = calculateAge(birthdayString);\n    const minAge = 13;\n    const maxAge = 120;\n    if (age > maxAge) {\n      return `You must be at most ${maxAge} years old.`;\n    }\n\n    if (age < minAge) {\n      return \"Are you sure you are that old?\";\n    }\n\n    return true;\n  }\n  useEffect(() => {\n    document.title = 'Sign Up';\n    if (user.userType) navigate('/' + user.userType);\n  }, [user, navigate, dispatch]);\n\n  \n\n  return (\n    <Container  className=\"min-vh-100 d-flex align-items-center\">\n      <Row className=\"g-0 justify-content-center w-100\">\n        <Col md={6} className=\"d-none d-md-flex align-items-center\">\n          <Image\n            src=\"https://raw.githubusercontent.com/Amr-Zain/care_track/secondary/front-end/public/images/signup_login.png\"\n            alt=\"Signup illustration\"\n            fluid\n            className=\"h-70 w-100 object-fit-cover\"\n          />\n        </Col>\n        \n        <Col sm={12} md={6} lg={5} className=\"p-5\">\n          <div className=\"text-center mb-4\">\n            <Image\n              src=\"https://raw.githubusercontent.com/Amr-Zain/care_track/secondary/front-end/public/images/logo.png\"\n              alt=\"Logo\"\n              fluid\n              style={{ maxWidth: '200px' }}\n            />\n          </div>\n\n          <Form onSubmit={handleSubmit(onSubmit)}>\n            {error && <Alert variant=\"danger\" className=\"mb-3\">{error}</Alert>}\n\n            <Form.Group className=\"mb-3\">\n              <Controller\n                name=\"userType\"\n                control={control}\n                rules={{ required: \"User Type is required\" }}\n                render={({ field, fieldState: { error } }) => (\n                  <>\n                    <Select\n                      {...field}\n                      options={userTypeOptions}\n                      placeholder=\"Select User Type\"\n                      classNamePrefix=\"react-select\"\n                      className={error ? 'is-invalid' : ''}\n                    />\n                    {error && (\n                      <Form.Text className=\"text-danger\">{error.message}</Form.Text>\n                    )}\n                  </>\n                )}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Full Name\"\n                className='bg-white'\n                isInvalid={!!errors.name}\n                {...register('name', {\n                  required: 'Full name is required',\n                  pattern: {\n                    value: /^[A-Za-z]+(?: [A-Za-z]+)+$/,\n                    message: 'Enter at least two names'\n                  }\n                })}\n              />\n              {errors.name && (\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.name.message}\n                </Form.Control.Feedback>\n              )}\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Control\n                type=\"email\"\n                className='bg-white'\n                placeholder=\"Email Address\"\n                isInvalid={!!errors.email}\n                {...register('email', {\n                  required: 'Email is required',\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                    message: 'Invalid email address'\n                  }\n                })}\n              />\n              {errors.email && (\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.email.message}\n                </Form.Control.Feedback>\n              )}\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Control\n                type=\"tel\"\n                className='bg-white'\n                placeholder=\"Phone Number (01XXXXXXXXX)\"\n                isInvalid={!!errors.phone}\n                {...register('phone', {\n                  required: 'Phone number is required',\n                  pattern: {\n                    value: /^01[0-9]{9}$/,\n                    message: 'Invalid Egyptian phone number'\n                  }\n                })}\n              />\n              {errors.phone && (\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.phone.message}\n                </Form.Control.Feedback>\n              )}\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                className='bg-white'\n                isInvalid={!!errors.password}\n                {...register('password', {\n                  required: 'Password is required',\n                  minLength: {\n                    value: 8,\n                    message: 'Minimum 8 characters required'\n                  }\n                })}\n              />\n              {errors.password && (\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.password.message}\n                </Form.Control.Feedback>\n              )}\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Controller\n                name=\"city\"\n                control={control}\n                rules={{ required: \"City is required\" }}\n                render={({ field, fieldState: { error } }) => (\n                  <>\n                    <Select\n                      {...field}\n                      options={cities.slice(1)}\n                      placeholder=\"Select City\"\n                      classNamePrefix=\"react-select\"\n                      className={error ? 'is-invalid' : ''}\n                    />\n                    {error && (\n                      <Form.Text className=\"text-danger\">{error.message}</Form.Text>\n                    )}\n                  </>\n                )}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-4\">\n              <Form.Control\n                type=\"date\"\n                isInvalid={!!errors.birthDay}\n                className='bg-white'\n                {...register('birthDay', {\n                  required: 'Birth date is required',\n                  validate: validateBirthday,\n                })}\n              />\n              {errors.birthDay && (\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.birthDay.message}\n                </Form.Control.Feedback>\n              )}\n            </Form.Group>\n\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              className=\"w-100 mb-3\"\n              disabled={isLoading}\n            >\n              {isLoading ? 'Creating Account...' : 'Sign Up'}\n            </Button>\n\n            <p className=\"text-center mb-0\">\n              Already have an account?{' '}\n              <Link to={'/' + LOGIN}>Login</Link>\n            </p>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default SignUp;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const propTypes = {\n  /**\n   * @default 'img'\n   */\n  bsPrefix: PropTypes.string,\n  /**\n   * Sets image as fluid image.\n   */\n  fluid: PropTypes.bool,\n  /**\n   * Sets image shape as rounded.\n   */\n  rounded: PropTypes.bool,\n  /**\n   * Sets image shape as circle.\n   */\n  roundedCircle: PropTypes.bool,\n  /**\n   * Sets image shape as thumbnail.\n   */\n  thumbnail: PropTypes.bool\n};\nconst Image = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  fluid = false,\n  rounded = false,\n  roundedCircle = false,\n  thumbnail = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  return /*#__PURE__*/_jsx(\"img\", {\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid && `${bsPrefix}-fluid`, rounded && `rounded`, roundedCircle && `rounded-circle`, thumbnail && `${bsPrefix}-thumbnail`)\n  });\n});\nImage.displayName = 'Image';\nexport default Image;"],"names":["specializations","userTypeOptions","label","value","bloodTypes","id","searchTypes","cities","days","SignUp","register","control","handleSubmit","formState","errors","useForm","defaultValues","userType","navigate","useNavigate","error","isLoading","user","useSelector","store","authedUser","dispatch","useDispatch","useEffect","document","title","_jsx","Container","className","children","_jsxs","Row","Col","md","Image","src","alt","fluid","sm","lg","style","maxWidth","Form","onSubmit","async","console","log","data","setAuthedUserThunk","create","Alert","variant","Group","Controller","name","rules","required","render","_ref","field","fieldState","_Fragment","Select","options","placeholder","classNamePrefix","Text","message","Control","type","isInvalid","pattern","Feedback","email","phone","password","minLength","_ref2","slice","birthDay","validate","birthdayString","age","calculateAge","Button","disabled","Link","to","LOGIN","PropTypes","React","ref","bsPrefix","rounded","roundedCircle","thumbnail","props","useBootstrapPrefix","classNames","displayName"],"sourceRoot":""}